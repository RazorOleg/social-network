{"version":3,"file":"static/js/497.ae6ee78d.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","utils/validators.js","webpack://social-network/./src/components/common/AddTextForm/AddTextForm.module.css?1242","components/common/AddTextForm/AddTextForm.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Profile_container__ev8pU\",\"h2\":\"Profile_h2__35TaR\",\"photoLarge\":\"Profile_photoLarge__9AecM\"};","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n    const [isEditMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect(() => {\r\n        // Оновлення локального стану, коли props.status змінюється\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const toggleEditMode = () => {\r\n        setEditMode(!isEditMode);\r\n\r\n        if (isEditMode) {\r\n            // Передавання оновленого статусу при виході з режиму редагування\r\n            props.updateUserStatus(status);\r\n        }\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isEditMode &&\r\n                <div>\r\n                    <span onDoubleClick={() => { toggleEditMode() }}>{props.status}</span>\r\n                </div>\r\n            }\r\n            {\r\n                isEditMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={() => { toggleEditMode() }} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport userPhoto from '../../../assets/photos/user.png';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProfileInfo = ({ profile, status, updateUserStatus }) => {\r\n    //const status = useSelector((state) => state.profilePage.status);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <img src='https://www.topgear.com/sites/default/files/2022/07/13.jpg' alt='' />\r\n            <img className={s.photoLarge} src={profile.photos.large ? profile.photos.large : userPhoto} alt='' />\r\n            <ProfileStatus status={status} updateUserStatus={updateUserStatus} />\r\n            <h2>\r\n                {profile.fullName}\r\n            </h2>\r\n            <h3>\r\n                {profile.aboutMe}\r\n            </h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__7qRG4\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n        <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Dwayne_Johnson_2%2C_2013.jpg/279px-Dwayne_Johnson_2%2C_2013.jpg' alt=''/>\r\n          { props.message }\r\n            <div>\r\n          <span>like</span> { props.likesCount }\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__Nkjpk\",\"posts\":\"MyPosts_posts__gsmvq\"};","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css';\r\nimport AddTextForm from '../../common/AddTextForm/AddTextForm';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    // console.log(\"RENDER\");\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddTextForm onSubmit={onAddPost} maxlength={50}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { addPost } from '../../../redux/actions/actions';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        posts: state.profilePage.posts\r\n    });\r\n}\r\n\r\n// const mapdispatchToProps = (dispatch) => {\r\n//     return ({\r\n//         addPost: () => {\r\n//             dispatch(addPostActionCreator());\r\n//         },\r\n//         updateNewPostTextAction: (text) => {\r\n//             let action = updateNewPostTextActionCreator(text);\r\n//             dispatch(action);\r\n//         }\r\n//     });\r\n// }\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = ({profile, status, updateUserStatus}) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={profile} status={status} updateUserStatus={updateUserStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from './../../redux/reducers/profile-reducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n    let { userId } = useParams();\r\n    //const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!userId) {\r\n            userId = props.authorisedUserId;\r\n            // if (!userId) {\r\n            //     return navigate('/login');\r\n            // }\r\n        }\r\n        \r\n        props.getUserProfile(userId);\r\n        props.getUserStatus(userId);\r\n    }, [userId]);\r\n\r\n    return (\r\n        <Profile {...props} />\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorisedUserId: state.auth.id\r\n    });\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n","\r\nexport const validateField = (maxLength) => (value) => {\r\n    if (!value) return \"Required\";\r\n    else  if (value.length > maxLength) return `Max length is ${maxLength} symbols`; \r\n    return undefined;\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"errorInput\":\"AddTextForm_errorInput__QAGc9\",\"errorText\":\"AddTextForm_errorText__ALgRD\"};","import { Field, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { validateField } from \"../../../utils/validators\";\r\nimport styles from './AddTextForm.module.css';\r\n\r\n\r\nconst AddTextForm = (props) => {\r\n    let fieldValidation = validateField(props.maxlength);\r\n\r\n    const initialValues = {\r\n        newText: '',\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={props.onSubmit}\r\n        >\r\n            {({ errors, touched }) => (\r\n                <Form>\r\n                    <div>\r\n                        <Field\r\n                            component=\"textarea\"\r\n                            name=\"newText\"\r\n                            placeholder=\"Enter your text\"\r\n                            validate={fieldValidation}\r\n                            className={\r\n                                touched.newText && errors.newText\r\n                                    ? styles.errorInput\r\n                                    : \"\"\r\n                            } />\r\n                        {errors.newText && touched.newText && <div className={styles.errorText}>{errors.newText}</div>}\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">Add</button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddTextForm;","import React from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const WithAuthRedirect = (props) => {\r\n\r\n        //const isAuth = useSelector((state) => state.auth.isAuth);\r\n\r\n        if (!props.isAuth) {\r\n            return <Navigate to='/login' />\r\n        }\r\n\r\n        return <Component {...props} />\r\n\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(WithAuthRedirect);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};"],"names":["props","isEditMode","setEditMode","useState","status","setStatus","useEffect","toggleEditMode","updateUserStatus","_jsxs","children","_jsx","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","_ref","profile","className","s","src","alt","photos","large","userPhoto","ProfileStatus","fullName","aboutMe","Preloader","message","likesCount","React","postsElements","posts","map","p","Post","id","AddTextForm","onSubmit","values","addPost","newText","maxlength","connect","state","profilePage","MyPosts","ProfileInfo","MyPostsContainer","compose","authorisedUserId","auth","getUserProfile","getUserStatus","withAuthRedirect","userId","useParams","Profile","fieldValidation","maxLength","length","concat","Formik","initialValues","errors","touched","Form","Field","component","name","placeholder","validate","styles","type","mapStateToPropsForRedirect","isAuth","Component","Navigate","to"],"sourceRoot":""}