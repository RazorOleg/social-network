{"version":3,"file":"static/js/411.8b4e0768.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.tsx","webpack://social-network/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","components/Users/Users.tsx","redux/selectors/users-selectors.ts","components/Users/UsersContainer.tsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"User_container__XitVF\",\"photo\":\"User_photo__9MZyN\",\"infoContainer\":\"User_infoContainer__cBeJE\",\"info\":\"User_info__71tsc\"};","import React from 'react';\r\nimport s from './User.module.css';\r\nimport userPhoto from '../../../assets/photos/user.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserType } from '../../../types/types';\r\n\r\ntype UserProps = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    followUser: (userId: number) => void\r\n    unFollowUser: (userId: number) => void\r\n}\r\n\r\nconst User = ({user, ...props}: UserProps) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.photo}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto} alt='' />\r\n                </NavLink>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            props.unFollowUser(user.id);\r\n                        }}>Unfollow</button>\r\n                        : <button  disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            props.followUser(user.id);\r\n                        }}>Follow</button>}\r\n                </div>\r\n            </div>\r\n            <div className={s.infoContainer}>\r\n                <div className={s.info}>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </div>\r\n                <div className={s.info}>\r\n                    <div>City</div>\r\n                    <div>Country</div>\r\n                    {/* <div>{props.location.cityName}</div> */}\r\n                    {/* <div>{props.location.countryName}</div> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","// extracted by mini-css-extract-plugin\nexport default {\"selected\":\"Paginator_selected__Ep0-k\",\"notSelected\":\"Paginator_notSelected__O2CfG\"};","import React from 'react';\r\nimport s from './Paginator.module.css';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\ntype PaginatorProps = {\r\n    totalItemsCount: number  \r\n    sizePage: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number, sizePage: number) => void\r\n    portionSize?: number\r\n}\r\n\r\n\r\nconst Paginator = ({ totalItemsCount, sizePage, currentPage, onPageChanged, portionSize = 10 }: PaginatorProps) => {\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    \r\n    const pagesCount = Math.ceil(totalItemsCount / sizePage);\r\n\r\n    const pages: Array<number> = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n    const leftPortionBorder = (portionNumber - 1) * portionSize + 1;\r\n    const rigthPortionBorder = portionNumber * portionSize;\r\n\r\n    useEffect( () => {\r\n        setPortionNumber(Math.ceil(currentPage / portionSize));\r\n    }, [currentPage, portionSize]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                portionNumber > 1 && <button onClick={ ()=> {setPortionNumber(portionNumber - 1)}}>Prev</button>\r\n            }\r\n            {pages\r\n            .filter(p => p >= leftPortionBorder && p <= rigthPortionBorder)\r\n            .map((p, i) => {\r\n                return <span key={i} className={currentPage === p ? s.selected : s.notSelected}\r\n                    onClick={() => { onPageChanged(p, sizePage) }}> {p} </span>\r\n            })}\r\n            {\r\n                portionCount > portionNumber && <button onClick={ ()=> {setPortionNumber(portionNumber + 1)}}>Next</button>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport User from './User/User';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport { UserType } from '../../types/types';\r\n\r\ntype UsersProps = {\r\n    usersCount: number\r\n    sizePage: number\r\n    currentPage: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n\r\n    onPageChanged: (pageNumber: number, sizePage: number) => void\r\n    unFollowUser: (userId: number) => void\r\n    followUser: (userId: number) => void\r\n}\r\n\r\nconst Users = ({ usersCount, sizePage, currentPage, onPageChanged, ...props }: UsersProps) => {\r\n    let users = props.users.map(u => <User\r\n        key={u.id} user={u} unFollowUser={props.unFollowUser}\r\n        followUser={props.followUser} followingInProgress={props.followingInProgress}\r\n    />);\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={usersCount} sizePage={sizePage} currentPage={currentPage} onPageChanged={onPageChanged} />\r\n            <div>{users}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\nimport { RootStateType } from \"../store/redux-store\";\r\nimport { UserType } from \"../../types/types\";\r\n\r\nconst getUsers = (state: RootStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getAllUsers = createSelector(\r\n    [getUsers],\r\n    (users: Array<UserType>) => {return users.filter(user => true)} //only for example\r\n) \r\n\r\nexport const getCurrentPage = (state: RootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n    \r\nexport const getTotalUsersCount = (state: RootStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getSizePage = (state: RootStateType) => {\r\n    return state.usersPage.sizePage\r\n}\r\nexport const getIsFetching = (state: RootStateType) => {\r\n    return state.usersPage.isFetching    \r\n}\r\n\r\nexport const getFollowingInProgress = (state: RootStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import React from 'react';\r\nimport { ConnectedProps, connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { requestUsers, onPageChanged, unFollow, follow } from '../../redux/reducers/users-reducer';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { getAllUsers, getCurrentPage, getFollowingInProgress, getIsFetching, getSizePage, getTotalUsersCount } from '../../redux/selectors/users-selectors';\r\nimport { RootStateType } from '../../redux/store/redux-store';\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersProps> {\r\n    componentDidMount() {\r\n        const { currentPage, sizePage } = this.props;\r\n\r\n        this.props.requestUsers(currentPage, sizePage);\r\n    }\r\n\r\n    render() {\r\n        return <> {this.props.isFetching && <Preloader />}\r\n            <Users\r\n                users={this.props.users}\r\n                currentPage={this.props.currentPage}\r\n                usersCount={this.props.usersCount}\r\n                sizePage={this.props.sizePage}\r\n                followingInProgress={this.props.followingInProgress}\r\n                followUser={this.props.follow}\r\n                unFollowUser={this.props.unFollow}\r\n                onPageChanged={this.props.onPageChanged}\r\n            />\r\n        </>\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType) => {\r\n    return ({\r\n        users: getAllUsers(state),\r\n        currentPage: getCurrentPage(state),\r\n        usersCount: getTotalUsersCount(state),\r\n        sizePage: getSizePage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    });\r\n}\r\n\r\nconst connector = connect(mapStateToProps,\r\n    {\r\n        follow,\r\n        unFollow,\r\n        onPageChanged,\r\n        requestUsers\r\n    })\r\n\r\ntype UsersProps = ConnectedProps<typeof connector>\r\n\r\nexport default compose(\r\n    connector,\r\n    withAuthRedirect\r\n)(UsersContainer);\r\n\r\n\r\n","import React from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const WithAuthRedirect = (props) => {\r\n\r\n        //const isAuth = useSelector((state) => state.auth.isAuth);\r\n\r\n        if (!props.isAuth) {\r\n            return <Navigate to='/login' />\r\n        }\r\n\r\n        return <Component {...props} />\r\n\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(WithAuthRedirect);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};"],"names":["_ref","user","props","_jsxs","className","s","children","_jsx","NavLink","to","id","src","photos","small","userPhoto","alt","followed","disabled","followingInProgress","some","onClick","unFollowUser","followUser","name","status","totalItemsCount","sizePage","currentPage","onPageChanged","portionSize","portionNumber","setPortionNumber","useState","pagesCount","Math","ceil","pages","i","push","portionCount","leftPortionBorder","rigthPortionBorder","useEffect","filter","p","map","usersCount","users","u","User","Paginator","getAllUsers","createSelector","state","usersPage","getCurrentPage","getTotalUsersCount","totalUsersCount","getSizePage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","React","componentDidMount","this","requestUsers","render","_Fragment","Preloader","Users","follow","unFollow","connector","connect","compose","withAuthRedirect","mapStateToPropsForRedirect","isAuth","auth","Component","Navigate"],"sourceRoot":""}